#задание 1#
from drawbot_skia.drawbot import rect, saveImage, fill

step = 170
y = 100
for i in range(5):
    fill(1, 0, 0.6)
    rect(800, y, 100, 100)
    y = y + step

saveImage('dz1.pdf')

#задание 2#
from drawbot_skia.drawbot import oval, saveImage, fill
x = 10
y = 10
step = 10
side = 100
for a in range(10):
     for b in range(10):
        fill(0.5, 0.5, 1)
        oval(x, y, 100, 100)
        y = step + a * (side + step)
        x = step + b * (side + step)
       
    

saveImage("dz2.pdf")


#задание 3#
from drawbot_skia.drawbot import *

canvas_size = 100
newPage(canvas_size, canvas_size)

line_length = 10
line_thickness = 10
shape_spacing = 10

line_start_x = (canvas_size - (3 * line_length + 2 * shape_spacing)) / 2
line_start_y = canvas_size / 2

# Квадрат
rect(line_start_x, line_start_y - line_thickness / 2, line_length, line_thickness)

# Круг
circle_radius = line_thickness / 2
oval(line_start_x + line_length + shape_spacing, line_start_y - circle_radius, line_thickness, line_thickness)

# Крест
cross_size = 1.5* line_thickness
cross_start_x = line_start_x + 2 * (line_length + shape_spacing)
line(
    (cross_start_x, line_start_y),
    (cross_start_x + cross_size, line_start_y)
)
line(
    (cross_start_x + cross_size / 2, line_start_y - cross_size / 2),
    (cross_start_x + cross_size / 2, line_start_y + cross_size / 2)
)

saveImage ("dz3.pdf")

#задание 4#

from drawbot_skia.drawbot import rect, oval, newPage, saveImage, stroke, fill, strokeWidth, line 

rules = [1, 0, 1, 0, 2, 0, "динозавр"] * 20

w, h = 742.5, 1050
newPage(w, h)

margin = 80
x = margin
y = h - margin

step = (w - margin * 2) / 7

size = step

for rule in rules:
    
    if rule == 0:
        fill(0)
        stroke(0, 0, 0)
        strokeWidth(0)
        oval(x, y - step, size, size)
    
    elif rule == 1:
        fill(0)
        stroke(0, 0, 0)
        strokeWidth(0)
        rect(x, y - step, size, size)
    
    elif rule == 2:
        fill(None)
        stroke(1, 0, 0.5)
        strokeWidth(3)
        oval(x, y - step, size, size)
    
    else:
        print(rule, "<— неизвестное правило")

    # сдвинем x на шаг
    x += step

    # если строка кончилась,
    # вернём x в начало, а
    # y сдвинем вниз на шаг
    if x >= w - margin:
        x = margin
        y -= step

    # если y дошёл до низа
    # страницы, создадим новую и
    # обнулим координаты
    if y - step < margin:
        newPage(w, h)
        x = margin
        y = h - margin

# выйдем из цикла (начнём писать
# без отступа) и сохраним pdf
saveImage("dz_tema_2_1.pdf")

#задание 5#

from drawbot_skia.drawbot import rect, oval, newPage, saveImage, stroke, fill, strokeWidth, line 
rules = [ 1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,
          1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,
          1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,
          1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,
          0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,
          0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,
          0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,
          0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,
          1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,
          1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,
          1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
          1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,
          1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,
          1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,
          1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1, 
          1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1, 
        ] * 1


w, h = 742.5, 1050
newPage(w, h)

margin = 80
x = margin
y = h - margin

step = (w - margin * 2) / 21

size = step

for rule in rules:
    
    if rule == 0:
        fill(0)
        stroke(0, 0, 0)
        strokeWidth(0)
        rect(x, y - step, size, size)
        
    else:
        print(rule, "<— неизвестное правило")

    # сдвинем x на шаг
    x += step

    # если строка кончилась,
    # вернём x в начало, а
    # y сдвинем вниз на шаг
    if x >= w - margin:
        x = margin
        y -= step

    # если y дошёл до низа
    # страницы, создадим новую и
    # обнулим координаты
    if y - step < margin:
        newPage(w, h)
        x = margin
        y = h - margin

# выйдем из цикла (начнём писать
# без отступа) и сохраним pdf
saveImage("dz_tema_2_2.pdf")

